---
description: Standard routing, ICS behavior, and parameter guidelines
globs:
  - "base/routes.py"
  - "main.py"
alwaysApply: true
---

Routing contract
- Use `mount_integration_routes(router, integration)` for all integrations.
- The route `GET /events` proxies to `<CalendarClass>.fetch_events` and injects an additional param `ics: bool = True`.
- When `ics=true`, the response is `text/plain` with an ICS payload generated by `utils.generate_ics(...)`.
- When `ics=false`, return JSON `List[Event]` objects.

Parameter guidelines for `fetch_events`
- Keep parameters JSON-serializable primitives (str/int/bool) for easy query usage.
- Provide defaults for optional params.
- Validate/normalize common date formats like `YYYY-MM-DD` via `datetime.strptime`.
- Document each parameter in the method docstringâ€”this appears in OpenAPI via the wrapper.

Examples
```python
class SomeCalendar(CalendarBase):
    def fetch_events(self, region: str = "US", days: int = 30) -> List[Event]:
        """
        Fetch events for a region over a lookahead window.
        Parameters:
        - region (str): ISO-3166 region code. Default "US".
        - days (int): Lookahead window size. Default 30.
        """
        ...
```

References
@base/routes.py
@utils.py

